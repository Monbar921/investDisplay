services:
  # app:
  #   image: my-spring-boot-app:latest # Replace with your app's Docker image name
  #   container_name: spring-boot-app
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8080:8080" # Maps port 8080 on the host to the container
  #   environment:
  #     - SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5432/mydatabase
  #     - SPRING_DATASOURCE_USERNAME=postgres
  #     - SPRING_DATASOURCE_PASSWORD=postgres
  #   depends_on:
  #     - db
  # price-service:
  #   image: my-springboot-app
  #   ...
  db:
    image: postgres:17.2
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_PASSWORD: postgres

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
      
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    command: ["redis-server", "--requirepass", "passwd"]
